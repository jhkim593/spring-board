version: '3.8'

services:
  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'EXTERNAL://localhost:9092,INTERNAL://kafka:9093'
      KAFKA_LISTENERS: 'EXTERNAL://0.0.0.0:9092,INTERNAL://0.0.0.0:9093,CONTROLLER://0.0.0.0:29093'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - "8989:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9093

  article-db:
    image: postgres:13.15-alpine
    container_name: board-article-postgresql
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: article
      POSTGRES_USER: root
      POSTGRES_PASSWORD: "8834"
      TZ: Asia/Seoul
    command: [
      'postgres','-c','wal_level=logical'
    ]
    volumes:
      - /Users/jhkim593/Desktop/kjh2/pgsql/volumes/article:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: article-read-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data

  kafka-connect:
    image: debezium/connect:2.4
    container_name: kafka-connect
    depends_on:
      - kafka
      - article-db
    environment:
      BOOTSTRAP_SERVERS: kafka:9093
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      STATUS_STORAGE_TOPIC: connect_statuses
      CONFIG_STORAGE_REPLICATION_FACTOR: 1
      OFFSET_STORAGE_REPLICATION_FACTOR: 1
      STATUS_STORAGE_REPLICATION_FACTOR: 1
    ports:
      - "8083:8083"

  debezium-init:
    image: curlimages/curl:latest
    container_name: debezium-init
    depends_on:
      - kafka-connect
    volumes:
      - ./scripts:/scripts
#    networks:
#      - debezium-network
    command: >
      sh -c "
        echo 'Waiting for Kafka Connect to be ready...'
        while ! curl -f http://kafka-connect:8083/connectors; do
          echo 'Kafka Connect not ready yet...'
          sleep 10
        done
        echo 'Kafka Connect is ready! Creating connector...'
        sleep 5
        curl -X POST http://kafka-connect:8083/connectors -H 'Content-Type: application/json' -d @/scripts/postgresql-connector.json
        echo 'Connector created successfully!'
      "

volumes:
  redis-data:
